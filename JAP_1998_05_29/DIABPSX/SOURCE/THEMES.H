#ifndef THEMES_H
#define THEMES_H


extern unsigned char TFit_Shrine__Fi(int i); // 0x8015BC0C

extern unsigned char TFit_Obj5__Fi(int t); // 0x8015BEFC

extern unsigned char TFit_SkelRoom__Fi(int t); // 0x8015C0C0

extern unsigned char TFit_GoatShrine__Fi(int t); // 0x8015C170

extern unsigned char CheckThemeObj3__Fiiii(int xp, int yp, int t, int f); // 0x8015C208

extern unsigned char TFit_Obj3__Fi(int t); // 0x8015C354

extern unsigned char CheckThemeReqs__Fi(int t); // 0x8015C414

extern unsigned char SpecialThemeFit__Fii(int i, int t); // 0x8015C4E0

extern unsigned char CheckThemeRoom__Fi(int tv); // 0x8015C6BC

extern void InitThemes__Fv(); // 0x8015C980

extern void HoldThemeRooms__Fv(); // 0x8015CCCC

extern void PlaceThemeMonsts__Fii(int t, int f); // 0x8015CDB0

extern void Theme_Barrel__Fi(int t); // 0x8015CF34

extern void Theme_Shrine__Fi(int t); // 0x8015D090

extern void Theme_MonstPit__Fi(int t); // 0x8015D178

extern void Theme_SkelRoom__Fi(int t); // 0x8015D2BC

extern void Theme_Treasure__Fi(int t); // 0x8015D5F8

extern void Theme_Library__Fi(int t); // 0x8015D83C

extern void Theme_Torture__Fi(int t); // 0x8015DAC0

extern void Theme_BloodFountain__Fi(int t); // 0x8015DC18

extern void Theme_Decap__Fi(int t); // 0x8015DC8C

extern void Theme_PurifyingFountain__Fi(int t); // 0x8015DDE4

extern void Theme_ArmorStand__Fi(int t); // 0x8015DE58

extern void Theme_GoatShrine__Fi(int t); // 0x8015DFD4

extern void Theme_Cauldron__Fi(int t); // 0x8015E108

extern void Theme_MurkyFountain__Fi(int t); // 0x8015E17C

extern void Theme_TearFountain__Fi(int t); // 0x8015E1F0

extern void Theme_BrnCross__Fi(int t); // 0x8015E264

extern void Theme_WeaponRack__Fi(int t); // 0x8015E3C0

extern void UpdateL4Trans__Fv(); // 0x8015E53C

extern void CreateThemeRooms__Fv(); // 0x8015E598


#endif
